/** @format */

require("dotenv").config();
const TelegramBot = require("node-telegram-bot-api");
const axios = require("axios");
const express = require("express");

const app = express();
app.use(express.json());

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Å webhook
const bot = new TelegramBot(process.env.BOT_TOKEN);
const WEBHOOK_URL = process.env.WEBHOOK_URL || "https://bot-2m94.onrender.com";

// –•—Ä–∞–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ–º–µ–Ω–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const userDomains = new Map();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –¥–æ–º–µ–Ω–∞
async function checkDomain(domain) {
  try {
    const response = await axios.get(`http://${domain}`, {
      timeout: 5000,
      validateStatus: function (status) {
        return status >= 200 && status < 600; // –ü—Ä–∏–Ω–∏–º–∞–µ–º –ª—é–±–æ–π —Å—Ç–∞—Ç—É—Å –∫–∞–∫ —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
      },
    });
    return true;
  } catch (error) {
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏
async function sendCheckResults(chatId) {
  if (!userDomains.has(chatId) || userDomains.get(chatId).size === 0) {
    return;
  }

  const domains = Array.from(userDomains.get(chatId));
  let results = "üïí –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–µ–Ω–æ–≤:\n\n";

  for (const domain of domains) {
    const isAvailable = await checkDomain(domain);
    results += `${domain}: ${isAvailable ? "‚úÖ" : "‚ùå"}\n`;
  }

  bot.sendMessage(chatId, results);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
function startAutoCheck(chatId) {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤ (12 * 60 * 60 * 1000 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥)
  setInterval(() => {
    sendCheckResults(chatId);
  }, 12 * 60 * 60 * 1000);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(
    chatId,
    "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–º–µ–Ω–æ–≤.\n\n" +
      "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n" +
      "/add domain.com - –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–º–µ–Ω –≤ —Å–ø–∏—Å–æ–∫\n" +
      "/remove domain.com - —É–¥–∞–ª–∏—Ç—å –¥–æ–º–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞\n" +
      "/list - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤\n" +
      "/check - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ –¥–æ–º–µ–Ω—ã –≤ —Å–ø–∏—Å–∫–µ\n" +
      "/autocheck - –≤–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∫–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤"
  );

  // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
  startAutoCheck(chatId);
});

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–º–µ–Ω–∞
bot.onText(/\/add (.+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const domain = match[1].trim();

  if (!userDomains.has(chatId)) {
    userDomains.set(chatId, new Set());
  }

  userDomains.get(chatId).add(domain);
  bot.sendMessage(chatId, `–î–æ–º–µ–Ω ${domain} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫!`);
});

// –£–¥–∞–ª–µ–Ω–∏–µ –¥–æ–º–µ–Ω–∞
bot.onText(/\/remove (.+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const domain = match[1].trim();

  if (userDomains.has(chatId) && userDomains.get(chatId).has(domain)) {
    userDomains.get(chatId).delete(domain);
    bot.sendMessage(chatId, `–î–æ–º–µ–Ω ${domain} —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞!`);
  } else {
    bot.sendMessage(chatId, "–î–æ–º–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ!");
  }
});

// –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤
bot.onText(/\/list/, (msg) => {
  const chatId = msg.chat.id;

  if (!userDomains.has(chatId) || userDomains.get(chatId).size === 0) {
    bot.sendMessage(chatId, "–°–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤ –ø—É—Å—Ç!");
    return;
  }

  const domains = Array.from(userDomains.get(chatId)).join("\n");
  bot.sendMessage(chatId, `–í–∞—à —Å–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤:\n${domains}`);
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤
bot.onText(/\/check/, async (msg) => {
  const chatId = msg.chat.id;

  if (!userDomains.has(chatId) || userDomains.get(chatId).size === 0) {
    bot.sendMessage(chatId, "–°–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤ –ø—É—Å—Ç!");
    return;
  }

  const domains = Array.from(userDomains.get(chatId));
  let results = "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:\n\n";

  for (const domain of domains) {
    const isAvailable = await checkDomain(domain);
    results += `${domain}: ${isAvailable ? "‚úÖ" : "‚ùå"}\n`;
  }

  bot.sendMessage(chatId, results);
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
bot.onText(/\/autocheck/, (msg) => {
  const chatId = msg.chat.id;
  startAutoCheck(chatId);
  bot.sendMessage(
    chatId,
    "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–µ–Ω–æ–≤ –≤–∫–ª—é—á–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä–∫–∞ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –∫–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤."
  );
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook
app.post(`/webhook`, (req, res) => {
  bot.processUpdate(req.body);
  res.sendStatus(200);
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 3000;
app.listen(PORT, async () => {
  console.log(`Server is running on port ${PORT}`);
  try {
    await bot.setWebHook(`${WEBHOOK_URL}/webhook`);
    console.log("Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ");
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ webhook:", error);
  }
});
